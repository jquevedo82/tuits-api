se creae como siempre la api de nestjs

creamos http request get y post

ahora verificamos codigos de estados http
vienen por defecto pero la podemos definir

que peticion utilizar patch(actualiza parcialmente el registro) o 
put (actualiza el registro completo o crea uno si no existe)

parametros del tipo body (json)

parametros del tipo query (son filtros)
/tuits?orderby=name&searchTerm=nestjs
parametro que se pasan por la url son tipo query
tipo parametro valor


//dto 
autenticacion 
user y pass -> (json) a api service login -> dto -> id y (user name)
toda la informacion que viaje  nuestro servidor deberia viajr convertida en unn dto
nest g cl modules/tuits/
carpeta de modules dentro del module de tuits 
una carpeta nueva que se llame dto 
create accion que va a realizar 
tuit entidad que trabaja
seguido de dto.ts 
node js nos da la opcion para validar
npm i class-validator class-transformer

 //validamos los datos que llegan a nuestros metodos
  //transformat a el dato q necesita
  //whitelist de muchos datos solo recibe el dato que esta en el q se establece q recibe
  //solo lo q esperamos lo demas es ignorado
  //forbidnonwhitelisted filtra los datos que se esperan si no es lo q se espera da el error 400
  app.useGlobalPipes(
    new ValidationPipe({
      transform: true,
      whitelist: true,
      forbidNonWhitelisted: true,
    }),
  );

luego vamos a trabajar con postgres sql instalamos
dni 14808265 y puerto 5432
luego docker instalamos
ahi que configurar la cuenta en nuestra compu correo y demas
docker run -d -p 8080:80 nginx
https://hub.docker.com/_/postgres

docker composer file

creamos el docker-compse.yml con la configuracion

configuramos postgres desde docker el server..
//depues lo cambiaremos a nuestro computador
montamos nuestro server 

ahora montamos typeORM
npm i typeorm pg @nestjs/typeorm

/// 05/08/22
configuracion de nestjs 

npm i save @nestjs/config
una aplicacion puede tener el mismo codigo fuente pero configuraciones diferentes...

generamos nuestro archivo .env donde estaran las variables useGlobalPipespara nuestras poreubas
nuenca debe estar en github 
es un archivo de ambiente 

configuras primero en app.moduleluego el main.ts 

recfactorizando mi bd 
creamos una carpeta en src llamada common 
este es una carpeta que utilizamos que es comun en el proyecto 
dentro de ella cramos una sub carpetaenum
y creamos nuestros enum 
es un tipo de dato de enumeracion
es la forma de darle descripciona una variable y su valor
if(number === 1) pero que es 1
if(number === MAX_VALUE) // MAX_VALUE ==1 en el enum





